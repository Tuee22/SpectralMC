# docker/docker-compose.yml
#
# Build once, re-use everywhere; no remote pulls.

services:
# --------------------------------------------------------------------------- #
# MinIO – S3-compatible object storage                                        #
# --------------------------------------------------------------------------- #
  minio:
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    command: server /data --console-address ":9001"
    volumes:
      - ../.data/minio:/data                # persistent host path
    environment:
      MINIO_ROOT_USER:     minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"                         # S3 API
      - "9001:9001"                         # Web console
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

# --------------------------------------------------------------------------- #
# One-shot job – create buckets (idempotent)                                  #
# --------------------------------------------------------------------------- #
  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        mc alias set local http://minio:9000 minioadmin minioadmin &&
        mc mb -p local/opt-models       || true &&
        mc mb -p local/opt-models/tb    || true
      "

# --------------------------------------------------------------------------- #
# Main dev / training container                                               #
# --------------------------------------------------------------------------- #
  spectralmc:
    build:
      context: ..                          # repo root
      dockerfile: docker/Dockerfile
    image: spectralmc:local
    pull_policy: "never"                   # never reach out to a registry
    depends_on:
      - minio
      - createbuckets
    restart: unless-stopped
    platform: linux/amd64
    volumes:
      - ..:/spectralmc                     # live code sync
    ports:
      - "8888:8888"                        # JupyterLab
    environment:
      AWS_ACCESS_KEY_ID:     minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_REGION:            us-east-1
      AWS_ENDPOINT_URL:      http://minio:9000
      S3_ENDPOINT:           http://minio:9000
      S3_USE_HTTPS:          "0"
      S3_VERIFY_SSL:         "0"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: ["gpu"]

# --------------------------------------------------------------------------- #
# TensorBoard – same image, different entry-point                             #
# --------------------------------------------------------------------------- #
  tensorboard:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: spectralmc:local
    pull_policy: "never"
    depends_on:
      - minio
      - createbuckets
      - spectralmc                        # ensures image exists before run
    restart: unless-stopped
    command: >
      tensorboard --bind_all
                  --port 6006
                  --reload_interval 30
                  --logdir s3://opt-models/tb
    environment:
      AWS_ACCESS_KEY_ID:     minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_REGION:            us-east-1
      AWS_ENDPOINT_URL:      http://minio:9000
      S3_ENDPOINT:           http://minio:9000
      S3_USE_HTTPS:          "0"
      S3_VERIFY_SSL:         "0"
    ports:
      - "6006:6006"